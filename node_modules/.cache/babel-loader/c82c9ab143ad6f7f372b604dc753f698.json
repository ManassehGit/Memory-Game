{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eshun\\\\OneDrive\\\\Documents\\\\Amalitech\\\\Project\\\\Memory-Game\\\\memory_game\\\\src\\\\components\\\\StartNewGameButton.js\",\n    _s = $RefreshSig$();\n\nimport Button from './Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleModalGameEndVisibility, toggleModalMenuSettigsVisibility, toggleModalMenuVisibility } from '../store/modalsSlice';\nimport { setGameSettings, startNewGame } from '../store/gameSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartNewGameButton = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isModalGameEndVisible = useSelector(state => state.modals.isModalGameEndVisible);\n  const isModalMenuSettingsVisible = useSelector(state => state.modals.isModalMenuSettingsVisible);\n  const isModalMenuVisible = useSelector(state => state.modals.isModalMenuVisible);\n\n  const startNewGameHandler = () => {\n    if (isModalGameEndVisible) dispatch(toggleModalGameEndVisibility());\n    if (isModalMenuVisible) dispatch(toggleModalMenuVisibility());\n\n    if (isModalMenuSettingsVisible) {\n      dispatch(setGameSettings(props.settingsChoice));\n      dispatch(startNewGame());\n    }\n\n    dispatch(toggleModalMenuSettigsVisibility());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: startNewGameHandler,\n      type: props.type,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(StartNewGameButton, \"lx6RhlS9AW1gYMmjW7PJ1oo6vhI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = StartNewGameButton;\nexport default StartNewGameButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartNewGameButton\");","map":{"version":3,"sources":["C:/Users/eshun/OneDrive/Documents/Amalitech/Project/Memory-Game/memory_game/src/components/StartNewGameButton.js"],"names":["Button","useDispatch","useSelector","toggleModalGameEndVisibility","toggleModalMenuSettigsVisibility","toggleModalMenuVisibility","setGameSettings","startNewGame","StartNewGameButton","props","dispatch","isModalGameEndVisible","state","modals","isModalMenuSettingsVisible","isModalMenuVisible","startNewGameHandler","settingsChoice","type","children"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,4BADF,EAEEC,gCAFF,EAGEC,yBAHF,QAIO,sBAJP;AAKA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,oBAA9C;;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,qBAAqB,GAAGT,WAAW,CACtCU,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,qBADe,CAAzC;AAGA,QAAMG,0BAA0B,GAAGZ,WAAW,CAC3CU,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,0BADoB,CAA9C;AAGA,QAAMC,kBAAkB,GAAGb,WAAW,CACnCU,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,kBADY,CAAtC;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAIL,qBAAJ,EAA2BD,QAAQ,CAACP,4BAA4B,EAA7B,CAAR;AAC3B,QAAIY,kBAAJ,EAAwBL,QAAQ,CAACL,yBAAyB,EAA1B,CAAR;;AAExB,QAAIS,0BAAJ,EAAgC;AAC9BJ,MAAAA,QAAQ,CAACJ,eAAe,CAACG,KAAK,CAACQ,cAAP,CAAhB,CAAR;AACAP,MAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACD;;AAEDG,IAAAA,QAAQ,CAACN,gCAAgC,EAAjC,CAAR;AACD,GAVD;;AAYA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEY,mBAAjB;AAAsC,MAAA,IAAI,EAAEP,KAAK,CAACS,IAAlD;AAAA,gBACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CA/BD;;GAAMX,kB;UACaP,W,EACaC,W,EAGKA,W,EAGRA,W;;;KARvBM,kB;AAiCN,eAAeA,kBAAf","sourcesContent":["import Button from './Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  toggleModalGameEndVisibility,\r\n  toggleModalMenuSettigsVisibility,\r\n  toggleModalMenuVisibility,\r\n} from '../store/modalsSlice';\r\nimport { setGameSettings, startNewGame } from '../store/gameSlice';\r\n\r\nconst StartNewGameButton = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isModalGameEndVisible = useSelector(\r\n    (state) => state.modals.isModalGameEndVisible\r\n  );\r\n  const isModalMenuSettingsVisible = useSelector(\r\n    (state) => state.modals.isModalMenuSettingsVisible\r\n  );\r\n  const isModalMenuVisible = useSelector(\r\n    (state) => state.modals.isModalMenuVisible\r\n  );\r\n\r\n  const startNewGameHandler = () => {\r\n    if (isModalGameEndVisible) dispatch(toggleModalGameEndVisibility());\r\n    if (isModalMenuVisible) dispatch(toggleModalMenuVisibility());\r\n\r\n    if (isModalMenuSettingsVisible) {\r\n      dispatch(setGameSettings(props.settingsChoice));\r\n      dispatch(startNewGame());\r\n    }\r\n\r\n    dispatch(toggleModalMenuSettigsVisibility());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={startNewGameHandler} type={props.type}>\r\n        {props.children}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartNewGameButton;\r\n"]},"metadata":{},"sourceType":"module"}