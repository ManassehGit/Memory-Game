{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eshun\\\\OneDrive\\\\Documents\\\\Amalitech\\\\Project\\\\Memory-Game\\\\memory_game\\\\src\\\\components\\\\GameSettingsMenu.js\",\n    _s = $RefreshSig$();\n\nimport styles from '../styles/GameSettingsMenu.module.css';\nimport { MAX_NUM_OF_PLAYERS, GAME_GRID_SIZES, GAME_THEMES } from '../constants';\nimport Button from './Button';\nimport StartNewGameButton from './StartNewGameButton';\nimport { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport firstCapitalLetter from '../helpers/firstCapitalLetter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameSettingsMenu = () => {\n  _s();\n\n  const [gridSize, setGridSize] = useState(useSelector(state => state.game.gridSize));\n  const [numOfPlayers, setNumOfPlayers] = useState(useSelector(state => state.game.numOfPlayers));\n  const [gridTheme, setGridTheme] = useState(useSelector(state => state.game.gridTheme));\n\n  const onChangeThemeHandler = newGameTheme => {\n    setGridTheme(newGameTheme);\n  };\n\n  const onChangeNumOfPlayersHandler = newNumOfPlayers => {\n    setNumOfPlayers(newNumOfPlayers);\n  };\n\n  const onChangeGridSizeHandler = newGridSize => {\n    setGridSize(newGridSize);\n  };\n\n  const generateThemeButtons = useMemo(() => {\n    const themeButtons = [];\n\n    for (const key in GAME_THEMES) {\n      themeButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onChangeThemeHandler.bind(null, GAME_THEMES[key]),\n        type: `menu-selection${GAME_THEMES[key] === gridTheme ? '--active' : ''}`,\n        children: firstCapitalLetter(GAME_THEMES[key])\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n\n    return themeButtons;\n  }, [gridTheme]);\n  const generateNumOfPlayersButtons = useMemo(() => {\n    const numOfPlayersButtons = [];\n\n    for (let i = 0; i < MAX_NUM_OF_PLAYERS; i++) {\n      numOfPlayersButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onChangeNumOfPlayersHandler.bind(null, i + 1),\n        type: `menu-selection${i + 1 === numOfPlayers ? '--active' : ''}`,\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    }\n\n    return numOfPlayersButtons;\n  }, [numOfPlayers]);\n  const generateGridSizeButtons = useMemo(() => {\n    const gridSizeButtons = [];\n\n    for (const key in GAME_GRID_SIZES) {\n      gridSizeButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onChangeGridSizeHandler.bind(null, GAME_GRID_SIZES[key]),\n        type: `menu-selection${GAME_GRID_SIZES[key] === gridSize ? '--active' : ''}`,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this));\n    }\n\n    return gridSizeButtons;\n  }, [gridSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['game-settings-menu'],\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles['game-settings-menu__title'],\n      children: \"Select Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['game-settings-menu__buttons'],\n      children: generateThemeButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles['game-settings-menu__title'],\n      children: \"Numbers of Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['game-settings-menu__buttons'],\n      children: generateNumOfPlayersButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles['game-settings-menu__title'],\n      children: \"Grid Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['game-settings-menu__buttons'],\n      children: generateGridSizeButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartNewGameButton, {\n      settingsChoice: {\n        gridSize,\n        numOfPlayers,\n        gridTheme\n      },\n      type: \"menu-start\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameSettingsMenu, \"CHLNVAXsdURuyufy6t8RfkrK6lU=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = GameSettingsMenu;\nexport default GameSettingsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameSettingsMenu\");","map":{"version":3,"sources":["C:/Users/eshun/OneDrive/Documents/Amalitech/Project/Memory-Game/memory_game/src/components/GameSettingsMenu.js"],"names":["styles","MAX_NUM_OF_PLAYERS","GAME_GRID_SIZES","GAME_THEMES","Button","StartNewGameButton","useState","useMemo","useSelector","firstCapitalLetter","GameSettingsMenu","gridSize","setGridSize","state","game","numOfPlayers","setNumOfPlayers","gridTheme","setGridTheme","onChangeThemeHandler","newGameTheme","onChangeNumOfPlayersHandler","newNumOfPlayers","onChangeGridSizeHandler","newGridSize","generateThemeButtons","themeButtons","key","push","bind","generateNumOfPlayersButtons","numOfPlayersButtons","i","generateGridSizeButtons","gridSizeButtons"],"mappings":"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","sourcesContent":["import styles from '../styles/GameSettingsMenu.module.css';\r\n\r\nimport { MAX_NUM_OF_PLAYERS, GAME_GRID_SIZES, GAME_THEMES } from '../constants';\r\nimport Button from './Button';\r\nimport StartNewGameButton from './StartNewGameButton';\r\nimport { useState, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport firstCapitalLetter from '../helpers/firstCapitalLetter';\r\n\r\nconst GameSettingsMenu = () => {\r\n  const [gridSize, setGridSize] = useState(\r\n    useSelector((state) => state.game.gridSize)\r\n  );\r\n  const [numOfPlayers, setNumOfPlayers] = useState(\r\n    useSelector((state) => state.game.numOfPlayers)\r\n  );\r\n  const [gridTheme, setGridTheme] = useState(\r\n    useSelector((state) => state.game.gridTheme)\r\n  );\r\n\r\n  const onChangeThemeHandler = (newGameTheme) => {\r\n    setGridTheme(newGameTheme);\r\n  };\r\n\r\n  const onChangeNumOfPlayersHandler = (newNumOfPlayers) => {\r\n    setNumOfPlayers(newNumOfPlayers);\r\n  };\r\n\r\n  const onChangeGridSizeHandler = (newGridSize) => {\r\n    setGridSize(newGridSize);\r\n  };\r\n\r\n  const generateThemeButtons = useMemo(() => {\r\n    const themeButtons = [];\r\n\r\n    for (const key in GAME_THEMES) {\r\n      themeButtons.push(\r\n        <Button\r\n          onClick={onChangeThemeHandler.bind(null, GAME_THEMES[key])}\r\n          key={key}\r\n          type={`menu-selection${\r\n            GAME_THEMES[key] === gridTheme ? '--active' : ''\r\n          }`}\r\n        >\r\n          {firstCapitalLetter(GAME_THEMES[key])}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return themeButtons;\r\n  }, [gridTheme]);\r\n\r\n  const generateNumOfPlayersButtons = useMemo(() => {\r\n    const numOfPlayersButtons = [];\r\n\r\n    for (let i = 0; i < MAX_NUM_OF_PLAYERS; i++) {\r\n      numOfPlayersButtons.push(\r\n        <Button\r\n          onClick={onChangeNumOfPlayersHandler.bind(null, i + 1)}\r\n          key={i}\r\n          type={`menu-selection${i + 1 === numOfPlayers ? '--active' : ''}`}\r\n        >\r\n          {i + 1}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return numOfPlayersButtons;\r\n  }, [numOfPlayers]);\r\n\r\n  const generateGridSizeButtons = useMemo(() => {\r\n    const gridSizeButtons = [];\r\n\r\n    for (const key in GAME_GRID_SIZES) {\r\n      gridSizeButtons.push(\r\n        <Button\r\n          onClick={onChangeGridSizeHandler.bind(null, GAME_GRID_SIZES[key])}\r\n          key={key}\r\n          type={`menu-selection${\r\n            GAME_GRID_SIZES[key] === gridSize ? '--active' : ''\r\n          }`}\r\n        >\r\n          {key}\r\n        </Button>\r\n      );\r\n    }\r\n    return gridSizeButtons;\r\n  }, [gridSize]);\r\n\r\n  return (\r\n    <div className={styles['game-settings-menu']}>\r\n      <h3 className={styles['game-settings-menu__title']}>Select Theme</h3>\r\n      <div className={styles['game-settings-menu__buttons']}>\r\n        {generateThemeButtons}\r\n      </div>\r\n      <h3 className={styles['game-settings-menu__title']}>\r\n        Numbers of Players\r\n      </h3>\r\n      <div className={styles['game-settings-menu__buttons']}>\r\n        {generateNumOfPlayersButtons}\r\n      </div>\r\n      <h3 className={styles['game-settings-menu__title']}>Grid Size</h3>\r\n      <div className={styles['game-settings-menu__buttons']}>\r\n        {generateGridSizeButtons}\r\n      </div>\r\n      <StartNewGameButton\r\n        settingsChoice={{ gridSize, numOfPlayers, gridTheme }}\r\n        type='menu-start'\r\n      >\r\n        Start Game\r\n      </StartNewGameButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSettingsMenu;\r\n"]},"metadata":{},"sourceType":"module"}