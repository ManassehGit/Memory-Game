{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eshun\\\\OneDrive\\\\Documents\\\\Amalitech\\\\Project\\\\Memory-Game\\\\memory_game\\\\src\\\\components\\\\GameInfoContainer.js\",\n    _s = $RefreshSig$();\n\nimport styles from '../styles/GameInfoContainer.module.css';\nimport GameInfo from './GameInfo';\nimport { useSelector } from 'react-redux';\nimport { useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameInfoContainer = props => {\n  _s();\n\n  const minutesElapsed = useSelector(state => state.game.minutesElapsed);\n  const secondsElapsed = useSelector(state => state.game.secondsElapsed);\n  const moves = useSelector(state => state.game.moves);\n  const pairs = useSelector(state => state.game.pairs);\n  const numOfPlayers = useSelector(state => state.game.numOfPlayers);\n  const activePlayerIndex = useSelector(state => state.game.activePlayerIndex);\n  let gameEndTitle = useRef('');\n  let gameEndSubtitle = useRef('');\n  const generateGameInfos = useMemo(() => {\n    const gameInfoElements = [];\n\n    if (numOfPlayers === 1) {\n      gameInfoElements.push( /*#__PURE__*/_jsxDEV(GameInfo, {\n        value: `${minutesElapsed}:${secondsElapsed.toString().padStart(2, '0')}`,\n        children: `Time ${props.gameEnd ? 'Elapsed' : ''}`\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n      gameInfoElements.push( /*#__PURE__*/_jsxDEV(GameInfo, {\n        value: moves[activePlayerIndex],\n        ...(props.gameEnd ? {\n          showMovesString: true\n        } : {}),\n        children: `Moves ${props.gameEnd ? 'Taken' : ''}`\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n\n      if (props.gameEnd) {\n        gameEndTitle.current = 'You did it!';\n        gameEndSubtitle.current = \"Game over! Here's how you got on\";\n      }\n    } else {\n      for (let i = 0; i < numOfPlayers; i++) {\n        gameInfoElements.push( /*#__PURE__*/_createElement(GameInfo, { ...(!props.gameEnd ? {\n            isActive: activePlayerIndex === i\n          } : {}),\n          key: i,\n          ...(props.gameEnd ? {\n            showPairsString: true\n          } : {}),\n          value: props.gameEnd ? pairs[i] : moves[i],\n          isWinner: props.gameEnd && pairs[i] === Math.max(...pairs),\n          playerShortText: `P${i + 1}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }\n        }, `Player ${i + 1}`));\n      }\n\n      if (props.gameEnd) {\n        gameInfoElements.sort((a, b) => b.props.value - a.props.value);\n        const playerToWin = gameInfoElements.filter(gameInfoElement => gameInfoElement.props.isWinner);\n        if (playerToWin.length > 1) gameEndTitle.current = \"It's a tie!\";else gameEndTitle.current = `${playerToWin[0].props.children} Wins!`;\n        gameEndSubtitle.current = 'Game over! Here are the results';\n      }\n    }\n\n    return gameInfoElements;\n  }, [activePlayerIndex, moves, numOfPlayers, pairs, props.gameEnd, minutesElapsed, secondsElapsed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.gameEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: gameEndTitle.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: gameEndSubtitle.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['game-info-container']} ${styles[`game-info-container--${props.layout}`]}`,\n      children: generateGameInfos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GameInfoContainer, \"BEJTxMPHOiUmZEXO6g/puSAkvVY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = GameInfoContainer;\nexport default GameInfoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameInfoContainer\");","map":{"version":3,"sources":["C:/Users/eshun/OneDrive/Documents/Amalitech/Project/Memory-Game/memory_game/src/components/GameInfoContainer.js"],"names":["styles","GameInfo","useSelector","useMemo","useRef","GameInfoContainer","props","minutesElapsed","state","game","secondsElapsed","moves","pairs","numOfPlayers","activePlayerIndex","gameEndTitle","gameEndSubtitle","generateGameInfos","gameInfoElements","push","toString","padStart","gameEnd","showMovesString","current","i","isActive","showPairsString","Math","max","sort","a","b","value","playerToWin","filter","gameInfoElement","isWinner","length","children","layout"],"mappings":"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","sourcesContent":["import styles from '../styles/GameInfoContainer.module.css';\r\n\r\nimport GameInfo from './GameInfo';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMemo, useRef } from 'react';\r\n\r\nconst GameInfoContainer = (props) => {\r\n  const minutesElapsed = useSelector((state) => state.game.minutesElapsed);\r\n  const secondsElapsed = useSelector((state) => state.game.secondsElapsed);\r\n  const moves = useSelector((state) => state.game.moves);\r\n  const pairs = useSelector((state) => state.game.pairs);\r\n  const numOfPlayers = useSelector((state) => state.game.numOfPlayers);\r\n  const activePlayerIndex = useSelector(\r\n    (state) => state.game.activePlayerIndex\r\n  );\r\n  let gameEndTitle = useRef('');\r\n  let gameEndSubtitle = useRef('');\r\n  const generateGameInfos = useMemo(() => {\r\n    const gameInfoElements = [];\r\n\r\n    if (numOfPlayers === 1) {\r\n      gameInfoElements.push(\r\n        <GameInfo\r\n          key={1}\r\n          value={`${minutesElapsed}:${secondsElapsed\r\n            .toString()\r\n            .padStart(2, '0')}`}\r\n        >{`Time ${props.gameEnd ? 'Elapsed' : ''}`}</GameInfo>\r\n      );\r\n      gameInfoElements.push(\r\n        <GameInfo\r\n          key={2}\r\n          value={moves[activePlayerIndex]}\r\n          {...(props.gameEnd ? { showMovesString: true } : {})}\r\n        >{`Moves ${props.gameEnd ? 'Taken' : ''}`}</GameInfo>\r\n      );\r\n      \r\n      if (props.gameEnd) {\r\n        gameEndTitle.current = 'You did it!';\r\n        gameEndSubtitle.current = \"Game over! Here's how you got on\";\r\n      }\r\n    } else {\r\n      for (let i = 0; i < numOfPlayers; i++) {\r\n        gameInfoElements.push(\r\n          <GameInfo\r\n            {...(!props.gameEnd ? { isActive: activePlayerIndex === i } : {})}\r\n            key={i}\r\n            {...(props.gameEnd ? { showPairsString: true } : {})}\r\n            value={props.gameEnd ? pairs[i] : moves[i]}\r\n            isWinner={props.gameEnd && pairs[i] === Math.max(...pairs)}\r\n            playerShortText={`P${i + 1}`}\r\n          >{`Player ${i + 1}`}</GameInfo>\r\n        );\r\n      }\r\n\r\n      if (props.gameEnd) {\r\n        gameInfoElements.sort((a, b) => b.props.value - a.props.value);\r\n\r\n        const playerToWin = gameInfoElements.filter(\r\n          (gameInfoElement) => gameInfoElement.props.isWinner\r\n        );\r\n        \r\n        if (playerToWin.length > 1) gameEndTitle.current = \"It's a tie!\";\r\n        else gameEndTitle.current = `${playerToWin[0].props.children} Wins!`;\r\n\r\n        gameEndSubtitle.current = 'Game over! Here are the results';\r\n      }\r\n    }\r\n\r\n    return gameInfoElements;\r\n  }, [\r\n    activePlayerIndex,\r\n    moves,\r\n    numOfPlayers,\r\n    pairs,\r\n    props.gameEnd,\r\n    minutesElapsed,\r\n    secondsElapsed,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {props.gameEnd && (\r\n        <div>\r\n          <h1>{gameEndTitle.current}</h1>\r\n          <p>{gameEndSubtitle.current}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={`${styles['game-info-container']} ${\r\n          styles[`game-info-container--${props.layout}`]\r\n        }`}\r\n      >\r\n        {generateGameInfos}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameInfoContainer;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}